/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: modules/ActionModule.proto */

#ifndef PROTOBUF_C_modules_2fActionModule_2eproto__INCLUDED
#define PROTOBUF_C_modules_2fActionModule_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct ActionModule__SystemLoggerStatus ActionModule__SystemLoggerStatus;
typedef struct ActionModule__GreenButtonStatus ActionModule__GreenButtonStatus;
typedef struct ActionModule__RedButtonStatus ActionModule__RedButtonStatus;
typedef struct ActionModule__WatchdogStatus ActionModule__WatchdogStatus;
typedef struct ActionModule__SystemLoggerCommand ActionModule__SystemLoggerCommand;
typedef struct ActionModule__GreenButtonCommand ActionModule__GreenButtonCommand;
typedef struct ActionModule__RedButtonCommand ActionModule__RedButtonCommand;
typedef struct ActionModule__WatchdogCommand ActionModule__WatchdogCommand;
typedef struct ActionModule__SystemLoggerError ActionModule__SystemLoggerError;
typedef struct ActionModule__GreenButtonError ActionModule__GreenButtonError;
typedef struct ActionModule__RedButtonError ActionModule__RedButtonError;
typedef struct ActionModule__WatchdogError ActionModule__WatchdogError;


/* --- enums --- */

typedef enum _ActionModule__SystemLoggerStatus__Verbosity {
  ACTION_MODULE__SYSTEM_LOGGER_STATUS__VERBOSITY__DEBUG = 0,
  ACTION_MODULE__SYSTEM_LOGGER_STATUS__VERBOSITY__INFO = 5,
  ACTION_MODULE__SYSTEM_LOGGER_STATUS__VERBOSITY__WARNING = 10,
  ACTION_MODULE__SYSTEM_LOGGER_STATUS__VERBOSITY__ERROR = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ACTION_MODULE__SYSTEM_LOGGER_STATUS__VERBOSITY)
} ActionModule__SystemLoggerStatus__Verbosity;
typedef enum _ActionModule__SystemLoggerCommand__Command {
  ACTION_MODULE__SYSTEM_LOGGER_COMMAND__COMMAND__LOG = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ACTION_MODULE__SYSTEM_LOGGER_COMMAND__COMMAND)
} ActionModule__SystemLoggerCommand__Command;
typedef enum _ActionModule__GreenButtonCommand__Command {
  ACTION_MODULE__GREEN_BUTTON_COMMAND__COMMAND__PRESS = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ACTION_MODULE__GREEN_BUTTON_COMMAND__COMMAND)
} ActionModule__GreenButtonCommand__Command;
typedef enum _ActionModule__RedButtonCommand__Command {
  ACTION_MODULE__RED_BUTTON_COMMAND__COMMAND__PRESS = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ACTION_MODULE__RED_BUTTON_COMMAND__COMMAND)
} ActionModule__RedButtonCommand__Command;
typedef enum _ActionModule__WatchdogCommand__Command {
  ACTION_MODULE__WATCHDOG_COMMAND__COMMAND__RESET = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ACTION_MODULE__WATCHDOG_COMMAND__COMMAND)
} ActionModule__WatchdogCommand__Command;

/* --- messages --- */

/*
 * ///////////////////////////////
 */
struct  ActionModule__SystemLoggerStatus
{
  ProtobufCMessage base;
  char *sourcedevice;
  size_t n_logs;
  char **logs;
  ActionModule__SystemLoggerStatus__Verbosity verbosity;
};
#define ACTION_MODULE__SYSTEM_LOGGER_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__system_logger_status__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL, ACTION_MODULE__SYSTEM_LOGGER_STATUS__VERBOSITY__DEBUG }


struct  ActionModule__GreenButtonStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean ispressed;
  protobuf_c_boolean isalive;
};
#define ACTION_MODULE__GREEN_BUTTON_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__green_button_status__descriptor) \
    , 0, 0 }


struct  ActionModule__RedButtonStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean ispressed;
};
#define ACTION_MODULE__RED_BUTTON_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__red_button_status__descriptor) \
    , 0 }


struct  ActionModule__WatchdogStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean isalive;
  char *state;
};
#define ACTION_MODULE__WATCHDOG_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__watchdog_status__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


struct  ActionModule__SystemLoggerCommand
{
  ProtobufCMessage base;
  ActionModule__SystemLoggerCommand__Command command;
};
#define ACTION_MODULE__SYSTEM_LOGGER_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__system_logger_command__descriptor) \
    , ACTION_MODULE__SYSTEM_LOGGER_COMMAND__COMMAND__LOG }


struct  ActionModule__GreenButtonCommand
{
  ProtobufCMessage base;
  ActionModule__GreenButtonCommand__Command command;
};
#define ACTION_MODULE__GREEN_BUTTON_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__green_button_command__descriptor) \
    , ACTION_MODULE__GREEN_BUTTON_COMMAND__COMMAND__PRESS }


struct  ActionModule__RedButtonCommand
{
  ProtobufCMessage base;
  ActionModule__RedButtonCommand__Command command;
};
#define ACTION_MODULE__RED_BUTTON_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__red_button_command__descriptor) \
    , ACTION_MODULE__RED_BUTTON_COMMAND__COMMAND__PRESS }


struct  ActionModule__WatchdogCommand
{
  ProtobufCMessage base;
  ActionModule__WatchdogCommand__Command command;
};
#define ACTION_MODULE__WATCHDOG_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__watchdog_command__descriptor) \
    , ACTION_MODULE__WATCHDOG_COMMAND__COMMAND__RESET }


struct  ActionModule__SystemLoggerError
{
  ProtobufCMessage base;
  char *errormessage;
};
#define ACTION_MODULE__SYSTEM_LOGGER_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__system_logger_error__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  ActionModule__GreenButtonError
{
  ProtobufCMessage base;
  char *errormessage;
};
#define ACTION_MODULE__GREEN_BUTTON_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__green_button_error__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  ActionModule__RedButtonError
{
  ProtobufCMessage base;
  char *errormessage;
};
#define ACTION_MODULE__RED_BUTTON_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__red_button_error__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  ActionModule__WatchdogError
{
  ProtobufCMessage base;
  char *errormessage;
};
#define ACTION_MODULE__WATCHDOG_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&action_module__watchdog_error__descriptor) \
    , (char *)protobuf_c_empty_string }


/* ActionModule__SystemLoggerStatus methods */
void   action_module__system_logger_status__init
                     (ActionModule__SystemLoggerStatus         *message);
size_t action_module__system_logger_status__get_packed_size
                     (const ActionModule__SystemLoggerStatus   *message);
size_t action_module__system_logger_status__pack
                     (const ActionModule__SystemLoggerStatus   *message,
                      uint8_t             *out);
size_t action_module__system_logger_status__pack_to_buffer
                     (const ActionModule__SystemLoggerStatus   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__SystemLoggerStatus *
       action_module__system_logger_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__system_logger_status__free_unpacked
                     (ActionModule__SystemLoggerStatus *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__GreenButtonStatus methods */
void   action_module__green_button_status__init
                     (ActionModule__GreenButtonStatus         *message);
size_t action_module__green_button_status__get_packed_size
                     (const ActionModule__GreenButtonStatus   *message);
size_t action_module__green_button_status__pack
                     (const ActionModule__GreenButtonStatus   *message,
                      uint8_t             *out);
size_t action_module__green_button_status__pack_to_buffer
                     (const ActionModule__GreenButtonStatus   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__GreenButtonStatus *
       action_module__green_button_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__green_button_status__free_unpacked
                     (ActionModule__GreenButtonStatus *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__RedButtonStatus methods */
void   action_module__red_button_status__init
                     (ActionModule__RedButtonStatus         *message);
size_t action_module__red_button_status__get_packed_size
                     (const ActionModule__RedButtonStatus   *message);
size_t action_module__red_button_status__pack
                     (const ActionModule__RedButtonStatus   *message,
                      uint8_t             *out);
size_t action_module__red_button_status__pack_to_buffer
                     (const ActionModule__RedButtonStatus   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__RedButtonStatus *
       action_module__red_button_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__red_button_status__free_unpacked
                     (ActionModule__RedButtonStatus *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__WatchdogStatus methods */
void   action_module__watchdog_status__init
                     (ActionModule__WatchdogStatus         *message);
size_t action_module__watchdog_status__get_packed_size
                     (const ActionModule__WatchdogStatus   *message);
size_t action_module__watchdog_status__pack
                     (const ActionModule__WatchdogStatus   *message,
                      uint8_t             *out);
size_t action_module__watchdog_status__pack_to_buffer
                     (const ActionModule__WatchdogStatus   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__WatchdogStatus *
       action_module__watchdog_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__watchdog_status__free_unpacked
                     (ActionModule__WatchdogStatus *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__SystemLoggerCommand methods */
void   action_module__system_logger_command__init
                     (ActionModule__SystemLoggerCommand         *message);
size_t action_module__system_logger_command__get_packed_size
                     (const ActionModule__SystemLoggerCommand   *message);
size_t action_module__system_logger_command__pack
                     (const ActionModule__SystemLoggerCommand   *message,
                      uint8_t             *out);
size_t action_module__system_logger_command__pack_to_buffer
                     (const ActionModule__SystemLoggerCommand   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__SystemLoggerCommand *
       action_module__system_logger_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__system_logger_command__free_unpacked
                     (ActionModule__SystemLoggerCommand *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__GreenButtonCommand methods */
void   action_module__green_button_command__init
                     (ActionModule__GreenButtonCommand         *message);
size_t action_module__green_button_command__get_packed_size
                     (const ActionModule__GreenButtonCommand   *message);
size_t action_module__green_button_command__pack
                     (const ActionModule__GreenButtonCommand   *message,
                      uint8_t             *out);
size_t action_module__green_button_command__pack_to_buffer
                     (const ActionModule__GreenButtonCommand   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__GreenButtonCommand *
       action_module__green_button_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__green_button_command__free_unpacked
                     (ActionModule__GreenButtonCommand *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__RedButtonCommand methods */
void   action_module__red_button_command__init
                     (ActionModule__RedButtonCommand         *message);
size_t action_module__red_button_command__get_packed_size
                     (const ActionModule__RedButtonCommand   *message);
size_t action_module__red_button_command__pack
                     (const ActionModule__RedButtonCommand   *message,
                      uint8_t             *out);
size_t action_module__red_button_command__pack_to_buffer
                     (const ActionModule__RedButtonCommand   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__RedButtonCommand *
       action_module__red_button_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__red_button_command__free_unpacked
                     (ActionModule__RedButtonCommand *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__WatchdogCommand methods */
void   action_module__watchdog_command__init
                     (ActionModule__WatchdogCommand         *message);
size_t action_module__watchdog_command__get_packed_size
                     (const ActionModule__WatchdogCommand   *message);
size_t action_module__watchdog_command__pack
                     (const ActionModule__WatchdogCommand   *message,
                      uint8_t             *out);
size_t action_module__watchdog_command__pack_to_buffer
                     (const ActionModule__WatchdogCommand   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__WatchdogCommand *
       action_module__watchdog_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__watchdog_command__free_unpacked
                     (ActionModule__WatchdogCommand *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__SystemLoggerError methods */
void   action_module__system_logger_error__init
                     (ActionModule__SystemLoggerError         *message);
size_t action_module__system_logger_error__get_packed_size
                     (const ActionModule__SystemLoggerError   *message);
size_t action_module__system_logger_error__pack
                     (const ActionModule__SystemLoggerError   *message,
                      uint8_t             *out);
size_t action_module__system_logger_error__pack_to_buffer
                     (const ActionModule__SystemLoggerError   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__SystemLoggerError *
       action_module__system_logger_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__system_logger_error__free_unpacked
                     (ActionModule__SystemLoggerError *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__GreenButtonError methods */
void   action_module__green_button_error__init
                     (ActionModule__GreenButtonError         *message);
size_t action_module__green_button_error__get_packed_size
                     (const ActionModule__GreenButtonError   *message);
size_t action_module__green_button_error__pack
                     (const ActionModule__GreenButtonError   *message,
                      uint8_t             *out);
size_t action_module__green_button_error__pack_to_buffer
                     (const ActionModule__GreenButtonError   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__GreenButtonError *
       action_module__green_button_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__green_button_error__free_unpacked
                     (ActionModule__GreenButtonError *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__RedButtonError methods */
void   action_module__red_button_error__init
                     (ActionModule__RedButtonError         *message);
size_t action_module__red_button_error__get_packed_size
                     (const ActionModule__RedButtonError   *message);
size_t action_module__red_button_error__pack
                     (const ActionModule__RedButtonError   *message,
                      uint8_t             *out);
size_t action_module__red_button_error__pack_to_buffer
                     (const ActionModule__RedButtonError   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__RedButtonError *
       action_module__red_button_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__red_button_error__free_unpacked
                     (ActionModule__RedButtonError *message,
                      ProtobufCAllocator *allocator);
/* ActionModule__WatchdogError methods */
void   action_module__watchdog_error__init
                     (ActionModule__WatchdogError         *message);
size_t action_module__watchdog_error__get_packed_size
                     (const ActionModule__WatchdogError   *message);
size_t action_module__watchdog_error__pack
                     (const ActionModule__WatchdogError   *message,
                      uint8_t             *out);
size_t action_module__watchdog_error__pack_to_buffer
                     (const ActionModule__WatchdogError   *message,
                      ProtobufCBuffer     *buffer);
ActionModule__WatchdogError *
       action_module__watchdog_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   action_module__watchdog_error__free_unpacked
                     (ActionModule__WatchdogError *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ActionModule__SystemLoggerStatus_Closure)
                 (const ActionModule__SystemLoggerStatus *message,
                  void *closure_data);
typedef void (*ActionModule__GreenButtonStatus_Closure)
                 (const ActionModule__GreenButtonStatus *message,
                  void *closure_data);
typedef void (*ActionModule__RedButtonStatus_Closure)
                 (const ActionModule__RedButtonStatus *message,
                  void *closure_data);
typedef void (*ActionModule__WatchdogStatus_Closure)
                 (const ActionModule__WatchdogStatus *message,
                  void *closure_data);
typedef void (*ActionModule__SystemLoggerCommand_Closure)
                 (const ActionModule__SystemLoggerCommand *message,
                  void *closure_data);
typedef void (*ActionModule__GreenButtonCommand_Closure)
                 (const ActionModule__GreenButtonCommand *message,
                  void *closure_data);
typedef void (*ActionModule__RedButtonCommand_Closure)
                 (const ActionModule__RedButtonCommand *message,
                  void *closure_data);
typedef void (*ActionModule__WatchdogCommand_Closure)
                 (const ActionModule__WatchdogCommand *message,
                  void *closure_data);
typedef void (*ActionModule__SystemLoggerError_Closure)
                 (const ActionModule__SystemLoggerError *message,
                  void *closure_data);
typedef void (*ActionModule__GreenButtonError_Closure)
                 (const ActionModule__GreenButtonError *message,
                  void *closure_data);
typedef void (*ActionModule__RedButtonError_Closure)
                 (const ActionModule__RedButtonError *message,
                  void *closure_data);
typedef void (*ActionModule__WatchdogError_Closure)
                 (const ActionModule__WatchdogError *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor action_module__system_logger_status__descriptor;
extern const ProtobufCEnumDescriptor    action_module__system_logger_status__verbosity__descriptor;
extern const ProtobufCMessageDescriptor action_module__green_button_status__descriptor;
extern const ProtobufCMessageDescriptor action_module__red_button_status__descriptor;
extern const ProtobufCMessageDescriptor action_module__watchdog_status__descriptor;
extern const ProtobufCMessageDescriptor action_module__system_logger_command__descriptor;
extern const ProtobufCEnumDescriptor    action_module__system_logger_command__command__descriptor;
extern const ProtobufCMessageDescriptor action_module__green_button_command__descriptor;
extern const ProtobufCEnumDescriptor    action_module__green_button_command__command__descriptor;
extern const ProtobufCMessageDescriptor action_module__red_button_command__descriptor;
extern const ProtobufCEnumDescriptor    action_module__red_button_command__command__descriptor;
extern const ProtobufCMessageDescriptor action_module__watchdog_command__descriptor;
extern const ProtobufCEnumDescriptor    action_module__watchdog_command__command__descriptor;
extern const ProtobufCMessageDescriptor action_module__system_logger_error__descriptor;
extern const ProtobufCMessageDescriptor action_module__green_button_error__descriptor;
extern const ProtobufCMessageDescriptor action_module__red_button_error__descriptor;
extern const ProtobufCMessageDescriptor action_module__watchdog_error__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_modules_2fActionModule_2eproto__INCLUDED */
