/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: modules/ExampleModule.proto */

#ifndef PROTOBUF_C_modules_2fExampleModule_2eproto__INCLUDED
#define PROTOBUF_C_modules_2fExampleModule_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct ExampleModule__BlinkerStatus ExampleModule__BlinkerStatus;
typedef struct ExampleModule__LightsStatus ExampleModule__LightsStatus;
typedef struct ExampleModule__BlinkerCommand ExampleModule__BlinkerCommand;
typedef struct ExampleModule__LightsCommand ExampleModule__LightsCommand;
typedef struct ExampleModule__BlinkerError ExampleModule__BlinkerError;
typedef struct ExampleModule__LightsError ExampleModule__LightsError;


/* --- enums --- */

typedef enum _ExampleModule__BlinkerCommand__Command {
  EXAMPLE_MODULE__BLINKER_COMMAND__COMMAND__TURN_ON = 0,
  EXAMPLE_MODULE__BLINKER_COMMAND__COMMAND__TURN_OFF = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXAMPLE_MODULE__BLINKER_COMMAND__COMMAND)
} ExampleModule__BlinkerCommand__Command;
typedef enum _ExampleModule__LightsCommand__Command {
  EXAMPLE_MODULE__LIGHTS_COMMAND__COMMAND__PRESS = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(EXAMPLE_MODULE__LIGHTS_COMMAND__COMMAND)
} ExampleModule__LightsCommand__Command;

/* --- messages --- */

struct  ExampleModule__BlinkerStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean isflashing;
};
#define EXAMPLE_MODULE__BLINKER_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&example_module__blinker_status__descriptor) \
    , 0 }


struct  ExampleModule__LightsStatus
{
  ProtobufCMessage base;
  protobuf_c_boolean ison;
};
#define EXAMPLE_MODULE__LIGHTS_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&example_module__lights_status__descriptor) \
    , 0 }


struct  ExampleModule__BlinkerCommand
{
  ProtobufCMessage base;
  ExampleModule__BlinkerCommand__Command command;
};
#define EXAMPLE_MODULE__BLINKER_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&example_module__blinker_command__descriptor) \
    , EXAMPLE_MODULE__BLINKER_COMMAND__COMMAND__TURN_ON }


struct  ExampleModule__LightsCommand
{
  ProtobufCMessage base;
  ExampleModule__LightsCommand__Command command;
};
#define EXAMPLE_MODULE__LIGHTS_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&example_module__lights_command__descriptor) \
    , EXAMPLE_MODULE__LIGHTS_COMMAND__COMMAND__PRESS }


struct  ExampleModule__BlinkerError
{
  ProtobufCMessage base;
  char *errormessage;
};
#define EXAMPLE_MODULE__BLINKER_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&example_module__blinker_error__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  ExampleModule__LightsError
{
  ProtobufCMessage base;
  char *errormessage;
};
#define EXAMPLE_MODULE__LIGHTS_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&example_module__lights_error__descriptor) \
    , (char *)protobuf_c_empty_string }


/* ExampleModule__BlinkerStatus methods */
void   example_module__blinker_status__init
                     (ExampleModule__BlinkerStatus         *message);
size_t example_module__blinker_status__get_packed_size
                     (const ExampleModule__BlinkerStatus   *message);
size_t example_module__blinker_status__pack
                     (const ExampleModule__BlinkerStatus   *message,
                      uint8_t             *out);
size_t example_module__blinker_status__pack_to_buffer
                     (const ExampleModule__BlinkerStatus   *message,
                      ProtobufCBuffer     *buffer);
ExampleModule__BlinkerStatus *
       example_module__blinker_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   example_module__blinker_status__free_unpacked
                     (ExampleModule__BlinkerStatus *message,
                      ProtobufCAllocator *allocator);
/* ExampleModule__LightsStatus methods */
void   example_module__lights_status__init
                     (ExampleModule__LightsStatus         *message);
size_t example_module__lights_status__get_packed_size
                     (const ExampleModule__LightsStatus   *message);
size_t example_module__lights_status__pack
                     (const ExampleModule__LightsStatus   *message,
                      uint8_t             *out);
size_t example_module__lights_status__pack_to_buffer
                     (const ExampleModule__LightsStatus   *message,
                      ProtobufCBuffer     *buffer);
ExampleModule__LightsStatus *
       example_module__lights_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   example_module__lights_status__free_unpacked
                     (ExampleModule__LightsStatus *message,
                      ProtobufCAllocator *allocator);
/* ExampleModule__BlinkerCommand methods */
void   example_module__blinker_command__init
                     (ExampleModule__BlinkerCommand         *message);
size_t example_module__blinker_command__get_packed_size
                     (const ExampleModule__BlinkerCommand   *message);
size_t example_module__blinker_command__pack
                     (const ExampleModule__BlinkerCommand   *message,
                      uint8_t             *out);
size_t example_module__blinker_command__pack_to_buffer
                     (const ExampleModule__BlinkerCommand   *message,
                      ProtobufCBuffer     *buffer);
ExampleModule__BlinkerCommand *
       example_module__blinker_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   example_module__blinker_command__free_unpacked
                     (ExampleModule__BlinkerCommand *message,
                      ProtobufCAllocator *allocator);
/* ExampleModule__LightsCommand methods */
void   example_module__lights_command__init
                     (ExampleModule__LightsCommand         *message);
size_t example_module__lights_command__get_packed_size
                     (const ExampleModule__LightsCommand   *message);
size_t example_module__lights_command__pack
                     (const ExampleModule__LightsCommand   *message,
                      uint8_t             *out);
size_t example_module__lights_command__pack_to_buffer
                     (const ExampleModule__LightsCommand   *message,
                      ProtobufCBuffer     *buffer);
ExampleModule__LightsCommand *
       example_module__lights_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   example_module__lights_command__free_unpacked
                     (ExampleModule__LightsCommand *message,
                      ProtobufCAllocator *allocator);
/* ExampleModule__BlinkerError methods */
void   example_module__blinker_error__init
                     (ExampleModule__BlinkerError         *message);
size_t example_module__blinker_error__get_packed_size
                     (const ExampleModule__BlinkerError   *message);
size_t example_module__blinker_error__pack
                     (const ExampleModule__BlinkerError   *message,
                      uint8_t             *out);
size_t example_module__blinker_error__pack_to_buffer
                     (const ExampleModule__BlinkerError   *message,
                      ProtobufCBuffer     *buffer);
ExampleModule__BlinkerError *
       example_module__blinker_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   example_module__blinker_error__free_unpacked
                     (ExampleModule__BlinkerError *message,
                      ProtobufCAllocator *allocator);
/* ExampleModule__LightsError methods */
void   example_module__lights_error__init
                     (ExampleModule__LightsError         *message);
size_t example_module__lights_error__get_packed_size
                     (const ExampleModule__LightsError   *message);
size_t example_module__lights_error__pack
                     (const ExampleModule__LightsError   *message,
                      uint8_t             *out);
size_t example_module__lights_error__pack_to_buffer
                     (const ExampleModule__LightsError   *message,
                      ProtobufCBuffer     *buffer);
ExampleModule__LightsError *
       example_module__lights_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   example_module__lights_error__free_unpacked
                     (ExampleModule__LightsError *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ExampleModule__BlinkerStatus_Closure)
                 (const ExampleModule__BlinkerStatus *message,
                  void *closure_data);
typedef void (*ExampleModule__LightsStatus_Closure)
                 (const ExampleModule__LightsStatus *message,
                  void *closure_data);
typedef void (*ExampleModule__BlinkerCommand_Closure)
                 (const ExampleModule__BlinkerCommand *message,
                  void *closure_data);
typedef void (*ExampleModule__LightsCommand_Closure)
                 (const ExampleModule__LightsCommand *message,
                  void *closure_data);
typedef void (*ExampleModule__BlinkerError_Closure)
                 (const ExampleModule__BlinkerError *message,
                  void *closure_data);
typedef void (*ExampleModule__LightsError_Closure)
                 (const ExampleModule__LightsError *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor example_module__blinker_status__descriptor;
extern const ProtobufCMessageDescriptor example_module__lights_status__descriptor;
extern const ProtobufCMessageDescriptor example_module__blinker_command__descriptor;
extern const ProtobufCEnumDescriptor    example_module__blinker_command__command__descriptor;
extern const ProtobufCMessageDescriptor example_module__lights_command__descriptor;
extern const ProtobufCEnumDescriptor    example_module__lights_command__command__descriptor;
extern const ProtobufCMessageDescriptor example_module__blinker_error__descriptor;
extern const ProtobufCMessageDescriptor example_module__lights_error__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_modules_2fExampleModule_2eproto__INCLUDED */
